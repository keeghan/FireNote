// Generated by view binder compiler. Do not edit!
package com.keeghan.firenote.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.keeghan.firenote.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentColorPickerBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final View blueBtn;

  @NonNull
  public final View brownBtn;

  @NonNull
  public final View darkGreyBtn;

  @NonNull
  public final View greenBtn;

  @NonNull
  public final TextView menuTitle;

  @NonNull
  public final View orangeBtn;

  @NonNull
  public final View redBtn;

  @NonNull
  public final LinearLayout topRow;

  @NonNull
  public final View transparentBtn;

  @NonNull
  public final View violetBtn;

  private FragmentColorPickerBinding(@NonNull FrameLayout rootView, @NonNull View blueBtn,
      @NonNull View brownBtn, @NonNull View darkGreyBtn, @NonNull View greenBtn,
      @NonNull TextView menuTitle, @NonNull View orangeBtn, @NonNull View redBtn,
      @NonNull LinearLayout topRow, @NonNull View transparentBtn, @NonNull View violetBtn) {
    this.rootView = rootView;
    this.blueBtn = blueBtn;
    this.brownBtn = brownBtn;
    this.darkGreyBtn = darkGreyBtn;
    this.greenBtn = greenBtn;
    this.menuTitle = menuTitle;
    this.orangeBtn = orangeBtn;
    this.redBtn = redBtn;
    this.topRow = topRow;
    this.transparentBtn = transparentBtn;
    this.violetBtn = violetBtn;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentColorPickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentColorPickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_color_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentColorPickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blueBtn;
      View blueBtn = ViewBindings.findChildViewById(rootView, id);
      if (blueBtn == null) {
        break missingId;
      }

      id = R.id.brownBtn;
      View brownBtn = ViewBindings.findChildViewById(rootView, id);
      if (brownBtn == null) {
        break missingId;
      }

      id = R.id.darkGreyBtn;
      View darkGreyBtn = ViewBindings.findChildViewById(rootView, id);
      if (darkGreyBtn == null) {
        break missingId;
      }

      id = R.id.greenBtn;
      View greenBtn = ViewBindings.findChildViewById(rootView, id);
      if (greenBtn == null) {
        break missingId;
      }

      id = R.id.menuTitle;
      TextView menuTitle = ViewBindings.findChildViewById(rootView, id);
      if (menuTitle == null) {
        break missingId;
      }

      id = R.id.orangeBtn;
      View orangeBtn = ViewBindings.findChildViewById(rootView, id);
      if (orangeBtn == null) {
        break missingId;
      }

      id = R.id.redBtn;
      View redBtn = ViewBindings.findChildViewById(rootView, id);
      if (redBtn == null) {
        break missingId;
      }

      id = R.id.topRow;
      LinearLayout topRow = ViewBindings.findChildViewById(rootView, id);
      if (topRow == null) {
        break missingId;
      }

      id = R.id.transparentBtn;
      View transparentBtn = ViewBindings.findChildViewById(rootView, id);
      if (transparentBtn == null) {
        break missingId;
      }

      id = R.id.violetBtn;
      View violetBtn = ViewBindings.findChildViewById(rootView, id);
      if (violetBtn == null) {
        break missingId;
      }

      return new FragmentColorPickerBinding((FrameLayout) rootView, blueBtn, brownBtn, darkGreyBtn,
          greenBtn, menuTitle, orangeBtn, redBtn, topRow, transparentBtn, violetBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
