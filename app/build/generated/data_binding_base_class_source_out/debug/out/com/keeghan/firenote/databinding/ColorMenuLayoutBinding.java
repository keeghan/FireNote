// Generated by view binder compiler. Do not edit!
package com.keeghan.firenote.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.keeghan.firenote.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ColorMenuLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View blueBtn;

  @NonNull
  public final View brownBtn;

  @NonNull
  public final View darkGreyBtn;

  @NonNull
  public final View greenBtn;

  @NonNull
  public final ConstraintLayout mainContainer;

  @NonNull
  public final TextView menuTitle;

  @NonNull
  public final View orangeBtn;

  @NonNull
  public final View redBtn;

  @NonNull
  public final View transparentBtn;

  @NonNull
  public final View violetBtn;

  private ColorMenuLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull View blueBtn,
      @NonNull View brownBtn, @NonNull View darkGreyBtn, @NonNull View greenBtn,
      @NonNull ConstraintLayout mainContainer, @NonNull TextView menuTitle, @NonNull View orangeBtn,
      @NonNull View redBtn, @NonNull View transparentBtn, @NonNull View violetBtn) {
    this.rootView = rootView;
    this.blueBtn = blueBtn;
    this.brownBtn = brownBtn;
    this.darkGreyBtn = darkGreyBtn;
    this.greenBtn = greenBtn;
    this.mainContainer = mainContainer;
    this.menuTitle = menuTitle;
    this.orangeBtn = orangeBtn;
    this.redBtn = redBtn;
    this.transparentBtn = transparentBtn;
    this.violetBtn = violetBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ColorMenuLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ColorMenuLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.color_menu_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ColorMenuLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blueBtn;
      View blueBtn = ViewBindings.findChildViewById(rootView, id);
      if (blueBtn == null) {
        break missingId;
      }

      id = R.id.brownBtn;
      View brownBtn = ViewBindings.findChildViewById(rootView, id);
      if (brownBtn == null) {
        break missingId;
      }

      id = R.id.darkGreyBtn;
      View darkGreyBtn = ViewBindings.findChildViewById(rootView, id);
      if (darkGreyBtn == null) {
        break missingId;
      }

      id = R.id.greenBtn;
      View greenBtn = ViewBindings.findChildViewById(rootView, id);
      if (greenBtn == null) {
        break missingId;
      }

      ConstraintLayout mainContainer = (ConstraintLayout) rootView;

      id = R.id.menuTitle;
      TextView menuTitle = ViewBindings.findChildViewById(rootView, id);
      if (menuTitle == null) {
        break missingId;
      }

      id = R.id.orangeBtn;
      View orangeBtn = ViewBindings.findChildViewById(rootView, id);
      if (orangeBtn == null) {
        break missingId;
      }

      id = R.id.redBtn;
      View redBtn = ViewBindings.findChildViewById(rootView, id);
      if (redBtn == null) {
        break missingId;
      }

      id = R.id.transparentBtn;
      View transparentBtn = ViewBindings.findChildViewById(rootView, id);
      if (transparentBtn == null) {
        break missingId;
      }

      id = R.id.violetBtn;
      View violetBtn = ViewBindings.findChildViewById(rootView, id);
      if (violetBtn == null) {
        break missingId;
      }

      return new ColorMenuLayoutBinding((ConstraintLayout) rootView, blueBtn, brownBtn, darkGreyBtn,
          greenBtn, mainContainer, menuTitle, orangeBtn, redBtn, transparentBtn, violetBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
